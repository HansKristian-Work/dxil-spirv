#version 460

struct _11
{
    float _m0;
    float _m1;
};

const _11 _28[5] = _11[](_11(1.0, 2.0), _11(3.0, 4.0), _11(5.0, 6.0), _11(7.0, 8.0), _11(0.0, 0.0));

layout(location = 0) in float F;
layout(location = 0) out vec2 SV_Target;

void main()
{
    SV_Target.x = _28[min((uint(int(F)) & 3u), 4u)]._m1;
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 47
; Schema: 0
OpCapability Shader
%37 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Fragment %3 "main" %7 %10
OpExecutionMode %3 OriginUpperLeft
OpName %3 "main"
OpName %7 "F"
OpName %10 "SV_Target"
OpName %11 ""
OpDecorate %7 Location 0
OpDecorate %10 Location 0
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeFloat 32
%6 = OpTypePointer Input %5
%7 = OpVariable %6 Input
%8 = OpTypeVector %5 2
%9 = OpTypePointer Output %8
%10 = OpVariable %9 Output
%11 = OpTypeStruct %5 %5
%12 = OpTypeInt 32 0
%13 = OpConstant %12 5
%14 = OpTypeArray %11 %13
%15 = OpConstant %5 1
%16 = OpConstant %5 2
%17 = OpConstantComposite %11 %15 %16
%18 = OpConstant %5 3
%19 = OpConstant %5 4
%20 = OpConstantComposite %11 %18 %19
%21 = OpConstant %5 5
%22 = OpConstant %5 6
%23 = OpConstantComposite %11 %21 %22
%24 = OpConstant %5 7
%25 = OpConstant %5 8
%26 = OpConstantComposite %11 %24 %25
%27 = OpConstantNull %11
%28 = OpConstantComposite %14 %17 %20 %23 %26 %27
%29 = OpTypePointer Private %14
%30 = OpVariable %29 Private %28
%34 = OpConstant %12 3
%35 = OpTypePointer Private %5
%39 = OpConstant %12 4
%40 = OpConstant %12 1
%42 = OpTypePointer Output %5
%44 = OpConstant %12 0
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %45
%45 = OpLabel
%31 = OpLoad %5 %7
%32 = OpConvertFToS %12 %31
%33 = OpBitwiseAnd %12 %32 %34
%38 = OpExtInst %12 %37 UMin %33 %39
%36 = OpAccessChain %35 %30 %38 %40
%41 = OpLoad %5 %36
%43 = OpAccessChain %42 %10 %44
OpStore %43 %41
OpReturn
OpFunctionEnd
#endif
