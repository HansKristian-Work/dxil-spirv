#version 460
#extension GL_EXT_buffer_reference2 : require
#extension GL_EXT_buffer_reference_uvec2 : require
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(buffer_reference) buffer PhysicalPointerFloat4NonWriteArray;
layout(buffer_reference) buffer PhysicalPointerFloat4CoherentArray;

layout(buffer_reference, buffer_reference_align = 16, std430) readonly buffer PhysicalPointerFloat4NonWriteArray
{
    vec4 value[];
};

layout(buffer_reference, buffer_reference_align = 16, std430) coherent buffer PhysicalPointerFloat4CoherentArray
{
    vec4 value[];
};

layout(push_constant, std430) uniform RootConstants
{
    uvec2 _m0;
    uvec2 _m1;
    uvec2 _m2;
    uvec2 _m3;
    uint _m4;
    uint _m5;
    uint _m6;
    uint _m7;
    uint _m8;
    uint _m9;
    uint _m10;
    uint _m11;
    uint _m12;
    uint _m13;
    uint _m14;
    uint _m15;
    uint _m16;
    uint _m17;
    uint _m18;
    uint _m19;
} registers;

void main()
{
    PhysicalPointerFloat4NonWriteArray _29 = PhysicalPointerFloat4NonWriteArray(registers._m1);
    float _85 = uintBitsToFloat(uvec4(registers._m12, registers._m13, registers._m14, registers._m15)).z + (uintBitsToFloat(uvec4(registers._m8, registers._m9, registers._m10, registers._m11)).y + uintBitsToFloat(uvec4(registers._m4, registers._m5, registers._m6, registers._m7)).x);
    PhysicalPointerFloat4CoherentArray(registers._m2).value[gl_GlobalInvocationID.x] = vec4(_85 + _29.value[gl_GlobalInvocationID.x].x, _85 + _29.value[gl_GlobalInvocationID.x].y, _85 + _29.value[gl_GlobalInvocationID.x].z, _85 + _29.value[gl_GlobalInvocationID.x].w);
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 98
; Schema: 0
OpCapability Shader
OpCapability PhysicalStorageBufferAddresses
OpExtension "SPV_KHR_physical_storage_buffer"
OpMemoryModel PhysicalStorageBuffer64 GLSL450
OpEntryPoint GLCompute %3 "main" %19
OpExecutionMode %3 LocalSize 1 1 1
OpName %3 "main"
OpName %7 "RootConstants"
OpName %9 "registers"
OpName %27 "PhysicalPointerFloat4NonWriteArray"
OpMemberName %27 0 "value"
OpName %91 "PhysicalPointerFloat4CoherentArray"
OpMemberName %91 0 "value"
OpDecorate %7 Block
OpMemberDecorate %7 0 Offset 0
OpMemberDecorate %7 1 Offset 8
OpMemberDecorate %7 2 Offset 16
OpMemberDecorate %7 3 Offset 24
OpMemberDecorate %7 4 Offset 32
OpMemberDecorate %7 5 Offset 36
OpMemberDecorate %7 6 Offset 40
OpMemberDecorate %7 7 Offset 44
OpMemberDecorate %7 8 Offset 48
OpMemberDecorate %7 9 Offset 52
OpMemberDecorate %7 10 Offset 56
OpMemberDecorate %7 11 Offset 60
OpMemberDecorate %7 12 Offset 64
OpMemberDecorate %7 13 Offset 68
OpMemberDecorate %7 14 Offset 72
OpMemberDecorate %7 15 Offset 76
OpMemberDecorate %7 16 Offset 80
OpMemberDecorate %7 17 Offset 84
OpMemberDecorate %7 18 Offset 88
OpMemberDecorate %7 19 Offset 92
OpDecorate %19 BuiltIn GlobalInvocationId
OpDecorate %26 ArrayStride 16
OpMemberDecorate %27 0 Offset 0
OpDecorate %27 Block
OpMemberDecorate %27 0 NonWritable
OpDecorate %90 ArrayStride 16
OpMemberDecorate %91 0 Offset 0
OpDecorate %91 Block
OpMemberDecorate %91 0 Coherent
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeVector %5 2
%7 = OpTypeStruct %6 %6 %6 %6 %5 %5 %5 %5 %5 %5 %5 %5 %5 %5 %5 %5 %5 %5 %5 %5
%8 = OpTypePointer PushConstant %7
%9 = OpVariable %8 PushConstant
%10 = OpTypePointer PushConstant %6
%12 = OpConstant %5 2
%15 = OpConstant %5 1
%17 = OpTypeVector %5 3
%18 = OpTypePointer Input %17
%19 = OpVariable %18 Input
%20 = OpTypePointer Input %5
%22 = OpConstant %5 0
%24 = OpTypeFloat 32
%25 = OpTypeVector %24 4
%26 = OpTypeRuntimeArray %25
%27 = OpTypeStruct %26
%28 = OpTypePointer PhysicalStorageBuffer %27
%30 = OpTypePointer PhysicalStorageBuffer %25
%37 = OpTypePointer PushConstant %5
%39 = OpConstant %5 4
%42 = OpConstant %5 5
%45 = OpConstant %5 6
%48 = OpConstant %5 7
%50 = OpTypeVector %5 4
%55 = OpConstant %5 8
%58 = OpConstant %5 9
%61 = OpConstant %5 10
%64 = OpConstant %5 11
%70 = OpConstant %5 12
%73 = OpConstant %5 13
%76 = OpConstant %5 14
%79 = OpConstant %5 15
%90 = OpTypeRuntimeArray %25
%91 = OpTypeStruct %90
%92 = OpTypePointer PhysicalStorageBuffer %91
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %96
%96 = OpLabel
%11 = OpAccessChain %10 %9 %12
%13 = OpLoad %6 %11
%14 = OpAccessChain %10 %9 %15
%16 = OpLoad %6 %14
%21 = OpAccessChain %20 %19 %22
%23 = OpLoad %5 %21
%29 = OpBitcast %28 %16
%31 = OpInBoundsAccessChain %30 %29 %22 %23
%32 = OpLoad %25 %31 Aligned 16
%33 = OpCompositeExtract %24 %32 0
%34 = OpCompositeExtract %24 %32 1
%35 = OpCompositeExtract %24 %32 2
%36 = OpCompositeExtract %24 %32 3
%38 = OpAccessChain %37 %9 %39
%40 = OpLoad %5 %38
%41 = OpAccessChain %37 %9 %42
%43 = OpLoad %5 %41
%44 = OpAccessChain %37 %9 %45
%46 = OpLoad %5 %44
%47 = OpAccessChain %37 %9 %48
%49 = OpLoad %5 %47
%51 = OpCompositeConstruct %50 %40 %43 %46 %49
%52 = OpBitcast %25 %51
%53 = OpCompositeExtract %24 %52 0
%54 = OpAccessChain %37 %9 %55
%56 = OpLoad %5 %54
%57 = OpAccessChain %37 %9 %58
%59 = OpLoad %5 %57
%60 = OpAccessChain %37 %9 %61
%62 = OpLoad %5 %60
%63 = OpAccessChain %37 %9 %64
%65 = OpLoad %5 %63
%66 = OpCompositeConstruct %50 %56 %59 %62 %65
%67 = OpBitcast %25 %66
%68 = OpCompositeExtract %24 %67 1
%69 = OpAccessChain %37 %9 %70
%71 = OpLoad %5 %69
%72 = OpAccessChain %37 %9 %73
%74 = OpLoad %5 %72
%75 = OpAccessChain %37 %9 %76
%77 = OpLoad %5 %75
%78 = OpAccessChain %37 %9 %79
%80 = OpLoad %5 %78
%81 = OpCompositeConstruct %50 %71 %74 %77 %80
%82 = OpBitcast %25 %81
%83 = OpCompositeExtract %24 %82 2
%84 = OpFAdd %24 %68 %53
%85 = OpFAdd %24 %83 %84
%86 = OpFAdd %24 %85 %33
%87 = OpFAdd %24 %85 %34
%88 = OpFAdd %24 %85 %35
%89 = OpFAdd %24 %85 %36
%93 = OpBitcast %92 %13
%94 = OpInBoundsAccessChain %30 %93 %22 %23
%95 = OpCompositeConstruct %25 %86 %87 %88 %89
OpStore %94 %95 Aligned 16
OpReturn
OpFunctionEnd
#endif
