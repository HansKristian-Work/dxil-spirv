#version 460
#extension GL_KHR_shader_subgroup_quad : require
#extension GL_KHR_shader_subgroup_basic : require
#extension GL_KHR_shader_subgroup_shuffle : require
layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, r32ui) uniform readonly uimageBuffer _8;
layout(set = 0, binding = 1, r32ui) uniform writeonly uimageBuffer _9;

void main()
{
    uvec4 _22 = imageLoad(_8, int(gl_GlobalInvocationID.x));
    uint _23 = _22.x;
    uint _35 = gl_GlobalInvocationID.x * 2u;
    imageStore(_9, int(_35), uvec4(subgroupQuadBroadcast(_23, 1u)));
    imageStore(_9, int(_35 + 1u), uvec4(subgroupShuffle(_23, (gl_SubgroupInvocationID & 4294967292u) + (_23 & 3u))));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 40
; Schema: 0
OpCapability Shader
OpCapability ImageBuffer
OpCapability GroupNonUniform
OpCapability GroupNonUniformShuffle
OpCapability GroupNonUniformQuad
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %3 "main" %14 %28
OpExecutionMode %3 LocalSize 64 1 1
OpName %3 "main"
OpDecorate %8 DescriptorSet 0
OpDecorate %8 Binding 0
OpDecorate %8 NonWritable
OpDecorate %9 DescriptorSet 0
OpDecorate %9 Binding 1
OpDecorate %9 NonReadable
OpDecorate %14 BuiltIn GlobalInvocationId
OpDecorate %28 BuiltIn SubgroupLocalInvocationId
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%7 = OpTypePointer UniformConstant %6
%8 = OpVariable %7 UniformConstant
%9 = OpVariable %7 UniformConstant
%12 = OpTypeVector %5 3
%13 = OpTypePointer Input %12
%14 = OpVariable %13 Input
%15 = OpTypePointer Input %5
%17 = OpConstant %5 0
%20 = OpConstant %5 2
%21 = OpTypeVector %5 4
%25 = OpConstant %5 3
%26 = OpConstant %5 1
%28 = OpVariable %15 Input
%31 = OpConstant %5 4294967292
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %39
%39 = OpLabel
%10 = OpLoad %6 %9
%11 = OpLoad %6 %8
%16 = OpAccessChain %15 %14 %17
%18 = OpLoad %5 %16
%19 = OpShiftLeftLogical %5 %18 %20
%22 = OpImageRead %21 %11 %18
%23 = OpCompositeExtract %5 %22 0
%24 = OpGroupNonUniformQuadBroadcast %5 %25 %23 %26
%27 = OpBitwiseAnd %5 %23 %25
%29 = OpLoad %5 %28
%30 = OpBitwiseAnd %5 %29 %31
%32 = OpIAdd %5 %30 %27
%33 = OpGroupNonUniformShuffle %5 %25 %23 %32
%34 = OpShiftLeftLogical %5 %18 %25
%35 = OpIMul %5 %18 %20
%36 = OpCompositeConstruct %21 %24 %24 %24 %24
OpImageWrite %10 %35 %36
%37 = OpCompositeConstruct %21 %33 %33 %33 %33
%38 = OpIAdd %5 %35 %26
OpImageWrite %10 %38 %37
OpReturn
OpFunctionEnd
#endif
