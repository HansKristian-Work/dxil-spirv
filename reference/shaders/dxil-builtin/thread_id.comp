#version 460
layout(local_size_x = 2, local_size_y = 2, local_size_z = 2) in;

layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer _8;

void main()
{
    imageStore(_8, int(gl_GlobalInvocationID.x), uvec4(floatBitsToUint(10.0)));
    imageStore(_8, int(gl_GlobalInvocationID.y), uvec4(floatBitsToUint(20.0)));
    imageStore(_8, int(gl_GlobalInvocationID.z), uvec4(floatBitsToUint(30.0)));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 35
; Schema: 0
OpCapability Shader
OpCapability ImageBuffer
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %3 "main" %12
OpExecutionMode %3 LocalSize 2 2 2
OpName %3 "main"
OpDecorate %8 DescriptorSet 0
OpDecorate %8 Binding 0
OpDecorate %8 NonReadable
OpDecorate %12 BuiltIn GlobalInvocationId
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%7 = OpTypePointer UniformConstant %6
%8 = OpVariable %7 UniformConstant
%10 = OpTypeVector %5 3
%11 = OpTypePointer Input %10
%12 = OpVariable %11 Input
%13 = OpTypePointer Input %5
%15 = OpConstant %5 0
%18 = OpConstant %5 1
%21 = OpConstant %5 2
%23 = OpTypeFloat 32
%24 = OpConstant %23 10
%26 = OpTypeVector %5 4
%28 = OpConstant %23 20
%31 = OpConstant %23 30
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %34
%34 = OpLabel
%9 = OpLoad %6 %8
%14 = OpAccessChain %13 %12 %15
%16 = OpLoad %5 %14
%17 = OpAccessChain %13 %12 %18
%19 = OpLoad %5 %17
%20 = OpAccessChain %13 %12 %21
%22 = OpLoad %5 %20
%25 = OpBitcast %5 %24
%27 = OpCompositeConstruct %26 %25 %25 %25 %25
OpImageWrite %9 %16 %27
%29 = OpBitcast %5 %28
%30 = OpCompositeConstruct %26 %29 %29 %29 %29
OpImageWrite %9 %19 %30
%32 = OpBitcast %5 %31
%33 = OpCompositeConstruct %26 %32 %32 %32 %32
OpImageWrite %9 %22 %33
OpReturn
OpFunctionEnd
#endif
