#version 460
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer _8;

uint _41;

void main()
{
    uint _20;
    uint _30;
    for (;;)
    {
        _20 = 0u;
        uint _22;
        bool ladder_phi_7;
        uint frontier_phi_6_pred_pred;
        for (;;)
        {
            _22 = 0u;
            bool ladder_phi_6_pred;
            for (;;)
            {
                if (gl_GlobalInvocationID.z < 10u)
                {
                    ladder_phi_6_pred = true;
                    frontier_phi_6_pred_pred = 70u;
                    break;
                }
                else
                {
                    uint _23 = _22 + 1u;
                    if (int(_23) < int(20u))
                    {
                        _22 = _23;
                        continue;
                    }
                    else
                    {
                        ladder_phi_6_pred = false;
                        frontier_phi_6_pred_pred = _41;
                        break;
                    }
                }
            }
            if (ladder_phi_6_pred)
            {
                ladder_phi_7 = true;
                break;
            }
            uint _21 = _20 + 1u;
            if (int(_21) < int(10u))
            {
                _20 = _21;
                continue;
            }
            else
            {
                ladder_phi_7 = false;
                break;
            }
        }
        if (ladder_phi_7)
        {
            _30 = frontier_phi_6_pred_pred;
            break;
        }
        _30 = 80u;
        break;
    }
    imageStore(_8, int(gl_GlobalInvocationID.x), uvec4(_30));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 56
; Schema: 0
OpCapability Shader
OpCapability ImageBuffer
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %3 "main" %12
OpExecutionMode %3 LocalSize 1 1 1
OpName %3 "main"
OpName %36 "ladder_phi_6.pred"
OpName %39 "ladder_phi_7"
OpName %40 "frontier_phi_6.pred.pred"
OpDecorate %8 DescriptorSet 0
OpDecorate %8 Binding 0
OpDecorate %8 NonReadable
OpDecorate %12 BuiltIn GlobalInvocationId
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%7 = OpTypePointer UniformConstant %6
%8 = OpVariable %7 UniformConstant
%10 = OpTypeVector %5 3
%11 = OpTypePointer Input %10
%12 = OpVariable %11 Input
%13 = OpTypePointer Input %5
%15 = OpConstant %5 0
%18 = OpConstant %5 2
%24 = OpTypeBool
%26 = OpConstant %5 10
%27 = OpConstant %5 1
%29 = OpConstant %5 20
%31 = OpConstant %5 70
%32 = OpConstant %5 80
%33 = OpTypeVector %5 4
%37 = OpConstantFalse %24
%38 = OpConstantTrue %24
%3 = OpFunction %1 None %2
%4 = OpLabel
%41 = OpUndef %5
OpBranch %42
%42 = OpLabel
%9 = OpLoad %6 %8
%14 = OpAccessChain %13 %12 %15
%16 = OpLoad %5 %14
%17 = OpAccessChain %13 %12 %18
%19 = OpLoad %5 %17
OpBranch %43
%43 = OpLabel
OpLoopMerge %54 %55 None
OpBranch %44
%44 = OpLabel
%20 = OpPhi %5 %15 %43 %21 %51
OpLoopMerge %52 %51 None
OpBranch %45
%45 = OpLabel
%22 = OpPhi %5 %15 %44 %23 %47
%25 = OpULessThan %24 %19 %26
OpLoopMerge %49 %47 None
OpBranchConditional %25 %48 %46
%46 = OpLabel
OpBranch %47
%47 = OpLabel
%23 = OpIAdd %5 %22 %27
%28 = OpSLessThan %24 %23 %29
OpBranchConditional %28 %45 %49
%48 = OpLabel
OpBranch %49
%49 = OpLabel
%36 = OpPhi %24 %37 %47 %38 %48
%40 = OpPhi %5 %41 %47 %31 %48
OpSelectionMerge %50 None
OpBranchConditional %36 %52 %50
%50 = OpLabel
OpBranch %51
%51 = OpLabel
%21 = OpIAdd %5 %20 %27
%35 = OpSLessThan %24 %21 %26
OpBranchConditional %35 %44 %52
%52 = OpLabel
%39 = OpPhi %24 %37 %51 %38 %49
OpSelectionMerge %53 None
OpBranchConditional %39 %54 %53
%53 = OpLabel
OpBranch %54
%54 = OpLabel
%30 = OpPhi %5 %32 %53 %40 %52
%34 = OpCompositeConstruct %33 %30 %30 %30 %30
OpImageWrite %9 %16 %34
OpReturn
%55 = OpLabel
OpBranch %43
OpFunctionEnd
#endif
