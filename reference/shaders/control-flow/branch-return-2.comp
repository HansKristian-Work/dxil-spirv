#version 460
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer _8;

void main()
{
    uint _37;
    uint _16;
    uint _19;
    uint _22;
    bool _24;
    for (;;)
    {
        _16 = gl_GlobalInvocationID.x;
        _19 = gl_GlobalInvocationID.y;
        _22 = gl_GlobalInvocationID.z;
        _24 = _16 == 10u;
        uint _31;
        if (_24)
        {
            if (_22 == 40u)
            {
                _37 = _19 * 10u;
                break;
            }
            _31 = 20u;
        }
        else
        {
            uint frontier_phi_4_2_ladder;
            if (_19 == 20u)
            {
                if (_22 == 50u)
                {
                    _37 = _16 * 24u;
                    break;
                }
                uint frontier_phi_4_2_ladder_5_ladder;
                uint _42;
                bool _43;
                for (;;)
                {
                    _42 = _16 + 10u;
                    _43 = _16 == 0u;
                    uint _46;
                    if (_43)
                    {
                        if (_22 == 30u)
                        {
                            frontier_phi_4_2_ladder_5_ladder = _42 * 30u;
                            break;
                        }
                        _46 = _42;
                    }
                    else
                    {
                        _46 = 0u;
                    }
                    frontier_phi_4_2_ladder_5_ladder = _46 + _42;
                    break;
                }
                frontier_phi_4_2_ladder = frontier_phi_4_2_ladder_5_ladder;
            }
            else
            {
                frontier_phi_4_2_ladder = 0u;
            }
            _31 = frontier_phi_4_2_ladder;
        }
        _37 = _31 + _16;
        break;
    }
    imageStore(_8, int(0u), uvec4(_37));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 69
; Schema: 0
OpCapability Shader
OpCapability ImageBuffer
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %3 "main" %12
OpExecutionMode %3 LocalSize 1 1 1
OpName %3 "main"
OpName %47 "frontier_phi_4.2.ladder.5.ladder"
OpName %48 "frontier_phi_4.2.ladder"
OpDecorate %8 DescriptorSet 0
OpDecorate %8 Binding 0
OpDecorate %8 NonReadable
OpDecorate %12 BuiltIn GlobalInvocationId
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%7 = OpTypePointer UniformConstant %6
%8 = OpVariable %7 UniformConstant
%10 = OpTypeVector %5 3
%11 = OpTypePointer Input %10
%12 = OpVariable %11 Input
%13 = OpTypePointer Input %5
%15 = OpConstant %5 0
%18 = OpConstant %5 1
%21 = OpConstant %5 2
%23 = OpTypeBool
%25 = OpConstant %5 10
%27 = OpConstant %5 40
%29 = OpConstant %5 20
%36 = OpConstant %5 50
%39 = OpTypeVector %5 4
%41 = OpConstant %5 24
%45 = OpConstant %5 30
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %49
%49 = OpLabel
%9 = OpLoad %6 %8
%14 = OpAccessChain %13 %12 %15
%16 = OpLoad %5 %14
%17 = OpAccessChain %13 %12 %18
%19 = OpLoad %5 %17
%20 = OpAccessChain %13 %12 %21
%22 = OpLoad %5 %20
%24 = OpIEqual %23 %16 %25
OpLoopMerge %66 %67 None
OpBranch %50
%50 = OpLabel
OpSelectionMerge %64 None
OpBranchConditional %24 %62 %51
%51 = OpLabel
%28 = OpIEqual %23 %19 %29
OpSelectionMerge %60 None
OpBranchConditional %28 %52 %60
%52 = OpLabel
%35 = OpIEqual %23 %22 %36
OpSelectionMerge %53 None
OpBranchConditional %35 %61 %53
%53 = OpLabel
%42 = OpIAdd %5 %16 %25
%43 = OpIEqual %23 %16 %15
OpLoopMerge %59 %68 None
OpBranch %54
%54 = OpLabel
OpSelectionMerge %57 None
OpBranchConditional %43 %55 %57
%55 = OpLabel
%44 = OpIEqual %23 %22 %45
OpSelectionMerge %56 None
OpBranchConditional %44 %58 %56
%56 = OpLabel
OpBranch %57
%57 = OpLabel
%46 = OpPhi %5 %15 %54 %42 %56
%33 = OpIAdd %5 %46 %42
OpBranch %59
%58 = OpLabel
%32 = OpIMul %5 %42 %45
OpBranch %59
%59 = OpLabel
%47 = OpPhi %5 %32 %58 %33 %57
OpBranch %60
%60 = OpLabel
%48 = OpPhi %5 %15 %51 %47 %59
OpBranch %64
%61 = OpLabel
%38 = OpIMul %5 %16 %41
OpBranch %66
%62 = OpLabel
%26 = OpIEqual %23 %22 %27
OpSelectionMerge %63 None
OpBranchConditional %26 %65 %63
%63 = OpLabel
OpBranch %64
%64 = OpLabel
%31 = OpPhi %5 %48 %60 %29 %63
%34 = OpIAdd %5 %31 %16
OpBranch %66
%65 = OpLabel
%30 = OpIMul %5 %19 %25
OpBranch %66
%66 = OpLabel
%37 = OpPhi %5 %30 %65 %34 %64 %38 %61
%40 = OpCompositeConstruct %39 %37 %37 %37 %37
OpImageWrite %9 %15 %40
OpReturn
%67 = OpLabel
OpBranch %49
%68 = OpLabel
OpBranch %53
OpFunctionEnd
#endif
